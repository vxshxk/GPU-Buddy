// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: gpu.proto
// Protobuf C++ Version: 5.29.0

#ifndef gpu_2eproto_2epb_2eh
#define gpu_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_gpu_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_gpu_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_gpu_2eproto;
namespace remoteGPU {
class File;
struct FileDefaultTypeInternal;
extern FileDefaultTypeInternal _File_default_instance_;
class FileID;
struct FileIDDefaultTypeInternal;
extern FileIDDefaultTypeInternal _FileID_default_instance_;
class Output;
struct OutputDefaultTypeInternal;
extern OutputDefaultTypeInternal _Output_default_instance_;
}  // namespace remoteGPU
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace remoteGPU {

// ===================================================================


// -------------------------------------------------------------------

class Output final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:remoteGPU.Output) */ {
 public:
  inline Output() : Output(nullptr) {}
  ~Output() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Output* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Output));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Output(
      ::google::protobuf::internal::ConstantInitialized);

  inline Output(const Output& from) : Output(nullptr, from) {}
  inline Output(Output&& from) noexcept
      : Output(nullptr, std::move(from)) {}
  inline Output& operator=(const Output& from) {
    CopyFrom(from);
    return *this;
  }
  inline Output& operator=(Output&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Output& default_instance() {
    return *internal_default_instance();
  }
  static inline const Output* internal_default_instance() {
    return reinterpret_cast<const Output*>(
        &_Output_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(Output& a, Output& b) { a.Swap(&b); }
  inline void Swap(Output* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Output* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Output* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Output>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Output& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Output& from) { Output::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Output* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "remoteGPU.Output"; }

 protected:
  explicit Output(::google::protobuf::Arena* arena);
  Output(::google::protobuf::Arena* arena, const Output& from);
  Output(::google::protobuf::Arena* arena, Output&& from) noexcept
      : Output(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOutFieldNumber = 1,
  };
  // repeated string out = 1;
  int out_size() const;
  private:
  int _internal_out_size() const;

  public:
  void clear_out() ;
  const std::string& out(int index) const;
  std::string* mutable_out(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_out(int index, Arg_&& value, Args_... args);
  std::string* add_out();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_out(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& out() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_out();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_out() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_out();

  public:
  // @@protoc_insertion_point(class_scope:remoteGPU.Output)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      28, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Output& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> out_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_gpu_2eproto;
};
// -------------------------------------------------------------------

class FileID final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:remoteGPU.FileID) */ {
 public:
  inline FileID() : FileID(nullptr) {}
  ~FileID() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(FileID* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(FileID));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FileID(
      ::google::protobuf::internal::ConstantInitialized);

  inline FileID(const FileID& from) : FileID(nullptr, from) {}
  inline FileID(FileID&& from) noexcept
      : FileID(nullptr, std::move(from)) {}
  inline FileID& operator=(const FileID& from) {
    CopyFrom(from);
    return *this;
  }
  inline FileID& operator=(FileID&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FileID& default_instance() {
    return *internal_default_instance();
  }
  static inline const FileID* internal_default_instance() {
    return reinterpret_cast<const FileID*>(
        &_FileID_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(FileID& a, FileID& b) { a.Swap(&b); }
  inline void Swap(FileID* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FileID* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FileID* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<FileID>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FileID& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FileID& from) { FileID::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(FileID* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "remoteGPU.FileID"; }

 protected:
  explicit FileID(::google::protobuf::Arena* arena);
  FileID(::google::protobuf::Arena* arena, const FileID& from);
  FileID(::google::protobuf::Arena* arena, FileID&& from) noexcept
      : FileID(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
  };
  // int32 id = 1;
  void clear_id() ;
  ::int32_t id() const;
  void set_id(::int32_t value);

  private:
  ::int32_t _internal_id() const;
  void _internal_set_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:remoteGPU.FileID)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const FileID& from_msg);
    ::int32_t id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_gpu_2eproto;
};
// -------------------------------------------------------------------

class File final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:remoteGPU.File) */ {
 public:
  inline File() : File(nullptr) {}
  ~File() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(File* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(File));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR File(
      ::google::protobuf::internal::ConstantInitialized);

  inline File(const File& from) : File(nullptr, from) {}
  inline File(File&& from) noexcept
      : File(nullptr, std::move(from)) {}
  inline File& operator=(const File& from) {
    CopyFrom(from);
    return *this;
  }
  inline File& operator=(File&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const File& default_instance() {
    return *internal_default_instance();
  }
  static inline const File* internal_default_instance() {
    return reinterpret_cast<const File*>(
        &_File_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(File& a, File& b) { a.Swap(&b); }
  inline void Swap(File* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(File* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  File* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<File>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const File& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const File& from) { File::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(File* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "remoteGPU.File"; }

 protected:
  explicit File(::google::protobuf::Arena* arena);
  File(::google::protobuf::Arena* arena, const File& from);
  File(::google::protobuf::Arena* arena, File&& from) noexcept
      : File(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCodeFieldNumber = 1,
    kCommandsFieldNumber = 2,
  };
  // repeated string code = 1;
  int code_size() const;
  private:
  int _internal_code_size() const;

  public:
  void clear_code() ;
  const std::string& code(int index) const;
  std::string* mutable_code(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_code(int index, Arg_&& value, Args_... args);
  std::string* add_code();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_code(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& code() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_code();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_code() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_code();

  public:
  // repeated string commands = 2;
  int commands_size() const;
  private:
  int _internal_commands_size() const;

  public:
  void clear_commands() ;
  const std::string& commands(int index) const;
  std::string* mutable_commands(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_commands(int index, Arg_&& value, Args_... args);
  std::string* add_commands();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_commands(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& commands() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_commands();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_commands() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_commands();

  public:
  // @@protoc_insertion_point(class_scope:remoteGPU.File)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      35, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const File& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> code_;
    ::google::protobuf::RepeatedPtrField<std::string> commands_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_gpu_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// File

// repeated string code = 1;
inline int File::_internal_code_size() const {
  return _internal_code().size();
}
inline int File::code_size() const {
  return _internal_code_size();
}
inline void File::clear_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_.Clear();
}
inline std::string* File::add_code() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_code()->Add();
  // @@protoc_insertion_point(field_add_mutable:remoteGPU.File.code)
  return _s;
}
inline const std::string& File::code(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:remoteGPU.File.code)
  return _internal_code().Get(index);
}
inline std::string* File::mutable_code(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:remoteGPU.File.code)
  return _internal_mutable_code()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void File::set_code(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_code()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:remoteGPU.File.code)
}
template <typename Arg_, typename... Args_>
inline void File::add_code(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_code(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:remoteGPU.File.code)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
File::code() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:remoteGPU.File.code)
  return _internal_code();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
File::mutable_code() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:remoteGPU.File.code)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_code();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
File::_internal_code() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.code_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
File::_internal_mutable_code() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.code_;
}

// repeated string commands = 2;
inline int File::_internal_commands_size() const {
  return _internal_commands().size();
}
inline int File::commands_size() const {
  return _internal_commands_size();
}
inline void File::clear_commands() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.commands_.Clear();
}
inline std::string* File::add_commands() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_commands()->Add();
  // @@protoc_insertion_point(field_add_mutable:remoteGPU.File.commands)
  return _s;
}
inline const std::string& File::commands(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:remoteGPU.File.commands)
  return _internal_commands().Get(index);
}
inline std::string* File::mutable_commands(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:remoteGPU.File.commands)
  return _internal_mutable_commands()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void File::set_commands(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_commands()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:remoteGPU.File.commands)
}
template <typename Arg_, typename... Args_>
inline void File::add_commands(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_commands(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:remoteGPU.File.commands)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
File::commands() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:remoteGPU.File.commands)
  return _internal_commands();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
File::mutable_commands() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:remoteGPU.File.commands)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_commands();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
File::_internal_commands() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.commands_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
File::_internal_mutable_commands() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.commands_;
}

// -------------------------------------------------------------------

// FileID

// int32 id = 1;
inline void FileID::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = 0;
}
inline ::int32_t FileID::id() const {
  // @@protoc_insertion_point(field_get:remoteGPU.FileID.id)
  return _internal_id();
}
inline void FileID::set_id(::int32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:remoteGPU.FileID.id)
}
inline ::int32_t FileID::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void FileID::_internal_set_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// -------------------------------------------------------------------

// Output

// repeated string out = 1;
inline int Output::_internal_out_size() const {
  return _internal_out().size();
}
inline int Output::out_size() const {
  return _internal_out_size();
}
inline void Output::clear_out() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.out_.Clear();
}
inline std::string* Output::add_out() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_out()->Add();
  // @@protoc_insertion_point(field_add_mutable:remoteGPU.Output.out)
  return _s;
}
inline const std::string& Output::out(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:remoteGPU.Output.out)
  return _internal_out().Get(index);
}
inline std::string* Output::mutable_out(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:remoteGPU.Output.out)
  return _internal_mutable_out()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void Output::set_out(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_out()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:remoteGPU.Output.out)
}
template <typename Arg_, typename... Args_>
inline void Output::add_out(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_out(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:remoteGPU.Output.out)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Output::out() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:remoteGPU.Output.out)
  return _internal_out();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Output::mutable_out() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:remoteGPU.Output.out)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_out();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Output::_internal_out() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.out_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Output::_internal_mutable_out() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.out_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace remoteGPU


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // gpu_2eproto_2epb_2eh
